<?php

/**
 * BasePayment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $status
 * @property integer $deal_id
 * @property integer $user_id
 * @property integer $quantity
 * @property integer $price
 * @property integer $offer
 * @property integer $real_value
 * @property integer $saved
 * @property integer $code
 * @property sfGuardUser $User
 * @property Deal $Deal
 * 
 * @method string      getStatus()     Returns the current record's "status" value
 * @method integer     getDealId()     Returns the current record's "deal_id" value
 * @method integer     getUserId()     Returns the current record's "user_id" value
 * @method integer     getQuantity()   Returns the current record's "quantity" value
 * @method integer     getPrice()      Returns the current record's "price" value
 * @method integer     getOffer()      Returns the current record's "offer" value
 * @method integer     getRealValue()  Returns the current record's "real_value" value
 * @method integer     getSaved()      Returns the current record's "saved" value
 * @method integer     getCode()       Returns the current record's "code" value
 * @method sfGuardUser getUser()       Returns the current record's "User" value
 * @method Deal        getDeal()       Returns the current record's "Deal" value
 * @method Payment     setStatus()     Sets the current record's "status" value
 * @method Payment     setDealId()     Sets the current record's "deal_id" value
 * @method Payment     setUserId()     Sets the current record's "user_id" value
 * @method Payment     setQuantity()   Sets the current record's "quantity" value
 * @method Payment     setPrice()      Sets the current record's "price" value
 * @method Payment     setOffer()      Sets the current record's "offer" value
 * @method Payment     setRealValue()  Sets the current record's "real_value" value
 * @method Payment     setSaved()      Sets the current record's "saved" value
 * @method Payment     setCode()       Sets the current record's "code" value
 * @method Payment     setUser()       Sets the current record's "User" value
 * @method Payment     setDeal()       Sets the current record's "Deal" value
 * 
 * @package    mendozaoferta
 * @subpackage model
 * @author     diego@cooperativahormigon.com.ar
 * @version    SVN: $Id: Builder.php 7200 2010-02-21 09:37:37Z beberlei $
 */
abstract class BasePayment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('payment');
        $this->hasColumn('status', 'string', 1, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '1',
             ));
        $this->hasColumn('deal_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('quantity', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('price', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('offer', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('real_value', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('saved', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('code', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Deal', array(
             'local' => 'deal_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}