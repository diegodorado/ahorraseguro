<?php

/**
 * BasePayment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $status
 * @property integer $deal_id
 * @property integer $user_id
 * @property integer $quantity
 * @property integer $price
 * @property integer $offer
 * @property integer $real_value
 * @property integer $saved
 * @property integer $code
 * @property timestamp $dm_bought_on
 * @property string $dm_id
 * @property double $dm_amount
 * @property double $dm_net_amount
 * @property integer $dm_method
 * @property string $dm_medium
 * @property integer $dm_installments
 * @property string $dm_buyer_email
 * @property string $dm_buyer_address
 * @property string $dm_buyer_comment
 * @property string $dm_buyer_name
 * @property string $dm_buyer_phone
 * @property string $dm_buyer_tipodoc
 * @property string $dm_buyer_numdoc
 * @property sfGuardUser $User
 * @property Deal $Deal
 * 
 * @method string      getStatus()           Returns the current record's "status" value
 * @method integer     getDealId()           Returns the current record's "deal_id" value
 * @method integer     getUserId()           Returns the current record's "user_id" value
 * @method integer     getQuantity()         Returns the current record's "quantity" value
 * @method integer     getPrice()            Returns the current record's "price" value
 * @method integer     getOffer()            Returns the current record's "offer" value
 * @method integer     getRealValue()        Returns the current record's "real_value" value
 * @method integer     getSaved()            Returns the current record's "saved" value
 * @method integer     getCode()             Returns the current record's "code" value
 * @method timestamp   getDmBoughtOn()       Returns the current record's "dm_bought_on" value
 * @method string      getDmId()             Returns the current record's "dm_id" value
 * @method double      getDmAmount()         Returns the current record's "dm_amount" value
 * @method double      getDmNetAmount()      Returns the current record's "dm_net_amount" value
 * @method integer     getDmMethod()         Returns the current record's "dm_method" value
 * @method string      getDmMedium()         Returns the current record's "dm_medium" value
 * @method integer     getDmInstallments()   Returns the current record's "dm_installments" value
 * @method string      getDmBuyerEmail()     Returns the current record's "dm_buyer_email" value
 * @method string      getDmBuyerAddress()   Returns the current record's "dm_buyer_address" value
 * @method string      getDmBuyerComment()   Returns the current record's "dm_buyer_comment" value
 * @method string      getDmBuyerName()      Returns the current record's "dm_buyer_name" value
 * @method string      getDmBuyerPhone()     Returns the current record's "dm_buyer_phone" value
 * @method string      getDmBuyerTipodoc()   Returns the current record's "dm_buyer_tipodoc" value
 * @method string      getDmBuyerNumdoc()    Returns the current record's "dm_buyer_numdoc" value
 * @method sfGuardUser getUser()             Returns the current record's "User" value
 * @method Deal        getDeal()             Returns the current record's "Deal" value
 * @method Payment     setStatus()           Sets the current record's "status" value
 * @method Payment     setDealId()           Sets the current record's "deal_id" value
 * @method Payment     setUserId()           Sets the current record's "user_id" value
 * @method Payment     setQuantity()         Sets the current record's "quantity" value
 * @method Payment     setPrice()            Sets the current record's "price" value
 * @method Payment     setOffer()            Sets the current record's "offer" value
 * @method Payment     setRealValue()        Sets the current record's "real_value" value
 * @method Payment     setSaved()            Sets the current record's "saved" value
 * @method Payment     setCode()             Sets the current record's "code" value
 * @method Payment     setDmBoughtOn()       Sets the current record's "dm_bought_on" value
 * @method Payment     setDmId()             Sets the current record's "dm_id" value
 * @method Payment     setDmAmount()         Sets the current record's "dm_amount" value
 * @method Payment     setDmNetAmount()      Sets the current record's "dm_net_amount" value
 * @method Payment     setDmMethod()         Sets the current record's "dm_method" value
 * @method Payment     setDmMedium()         Sets the current record's "dm_medium" value
 * @method Payment     setDmInstallments()   Sets the current record's "dm_installments" value
 * @method Payment     setDmBuyerEmail()     Sets the current record's "dm_buyer_email" value
 * @method Payment     setDmBuyerAddress()   Sets the current record's "dm_buyer_address" value
 * @method Payment     setDmBuyerComment()   Sets the current record's "dm_buyer_comment" value
 * @method Payment     setDmBuyerName()      Sets the current record's "dm_buyer_name" value
 * @method Payment     setDmBuyerPhone()     Sets the current record's "dm_buyer_phone" value
 * @method Payment     setDmBuyerTipodoc()   Sets the current record's "dm_buyer_tipodoc" value
 * @method Payment     setDmBuyerNumdoc()    Sets the current record's "dm_buyer_numdoc" value
 * @method Payment     setUser()             Sets the current record's "User" value
 * @method Payment     setDeal()             Sets the current record's "Deal" value
 * 
 * @package    mendozaoferta
 * @subpackage model
 * @author     diego@cooperativahormigon.com.ar
 * @version    SVN: $Id: Builder.php 7200 2010-02-21 09:37:37Z beberlei $
 */
abstract class BasePayment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('payment');
        $this->hasColumn('status', 'string', 1, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '1',
             ));
        $this->hasColumn('deal_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('quantity', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('price', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('offer', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('real_value', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('saved', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('code', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('dm_bought_on', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('dm_id', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('dm_amount', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('dm_net_amount', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('dm_method', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('dm_medium', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('dm_installments', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('dm_buyer_email', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('dm_buyer_address', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('dm_buyer_comment', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('dm_buyer_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('dm_buyer_phone', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('dm_buyer_tipodoc', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('dm_buyer_numdoc', 'string', null, array(
             'type' => 'string',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Deal', array(
             'local' => 'deal_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}