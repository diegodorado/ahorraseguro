<?php

/**
 * BaseDeal
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property boolean $is_oferton
 * @property boolean $has_yapa
 * @property integer $category_id
 * @property integer $seller_id
 * @property integer $store_id
 * @property integer $quarter_id
 * @property timestamp $starts_at
 * @property timestamp $ends_at
 * @property integer $bought_count
 * @property integer $visited_count
 * @property integer $printed_count
 * @property integer $offer
 * @property integer $real_value
 * @property string $image
 * @property string $title
 * @property string $newsletter_title
 * @property string $featured
 * @property string $conditions
 * @property string $description
 * @property integer $max_per_buy
 * @property integer $max_deals
 * @property Category $Category
 * @property Seller $Seller
 * @property Store $Store
 * @property Quarter $Quarter
 * @property Doctrine_Collection $Payment
 * 
 * @method boolean             getIsOferton()        Returns the current record's "is_oferton" value
 * @method boolean             getHasYapa()          Returns the current record's "has_yapa" value
 * @method integer             getCategoryId()       Returns the current record's "category_id" value
 * @method integer             getSellerId()         Returns the current record's "seller_id" value
 * @method integer             getStoreId()          Returns the current record's "store_id" value
 * @method integer             getQuarterId()        Returns the current record's "quarter_id" value
 * @method timestamp           getStartsAt()         Returns the current record's "starts_at" value
 * @method timestamp           getEndsAt()           Returns the current record's "ends_at" value
 * @method integer             getBoughtCount()      Returns the current record's "bought_count" value
 * @method integer             getVisitedCount()     Returns the current record's "visited_count" value
 * @method integer             getPrintedCount()     Returns the current record's "printed_count" value
 * @method integer             getOffer()            Returns the current record's "offer" value
 * @method integer             getRealValue()        Returns the current record's "real_value" value
 * @method string              getImage()            Returns the current record's "image" value
 * @method string              getTitle()            Returns the current record's "title" value
 * @method string              getNewsletterTitle()  Returns the current record's "newsletter_title" value
 * @method string              getFeatured()         Returns the current record's "featured" value
 * @method string              getConditions()       Returns the current record's "conditions" value
 * @method string              getDescription()      Returns the current record's "description" value
 * @method integer             getMaxPerBuy()        Returns the current record's "max_per_buy" value
 * @method integer             getMaxDeals()         Returns the current record's "max_deals" value
 * @method Category            getCategory()         Returns the current record's "Category" value
 * @method Seller              getSeller()           Returns the current record's "Seller" value
 * @method Store               getStore()            Returns the current record's "Store" value
 * @method Quarter             getQuarter()          Returns the current record's "Quarter" value
 * @method Doctrine_Collection getPayment()          Returns the current record's "Payment" collection
 * @method Deal                setIsOferton()        Sets the current record's "is_oferton" value
 * @method Deal                setHasYapa()          Sets the current record's "has_yapa" value
 * @method Deal                setCategoryId()       Sets the current record's "category_id" value
 * @method Deal                setSellerId()         Sets the current record's "seller_id" value
 * @method Deal                setStoreId()          Sets the current record's "store_id" value
 * @method Deal                setQuarterId()        Sets the current record's "quarter_id" value
 * @method Deal                setStartsAt()         Sets the current record's "starts_at" value
 * @method Deal                setEndsAt()           Sets the current record's "ends_at" value
 * @method Deal                setBoughtCount()      Sets the current record's "bought_count" value
 * @method Deal                setVisitedCount()     Sets the current record's "visited_count" value
 * @method Deal                setPrintedCount()     Sets the current record's "printed_count" value
 * @method Deal                setOffer()            Sets the current record's "offer" value
 * @method Deal                setRealValue()        Sets the current record's "real_value" value
 * @method Deal                setImage()            Sets the current record's "image" value
 * @method Deal                setTitle()            Sets the current record's "title" value
 * @method Deal                setNewsletterTitle()  Sets the current record's "newsletter_title" value
 * @method Deal                setFeatured()         Sets the current record's "featured" value
 * @method Deal                setConditions()       Sets the current record's "conditions" value
 * @method Deal                setDescription()      Sets the current record's "description" value
 * @method Deal                setMaxPerBuy()        Sets the current record's "max_per_buy" value
 * @method Deal                setMaxDeals()         Sets the current record's "max_deals" value
 * @method Deal                setCategory()         Sets the current record's "Category" value
 * @method Deal                setSeller()           Sets the current record's "Seller" value
 * @method Deal                setStore()            Sets the current record's "Store" value
 * @method Deal                setQuarter()          Sets the current record's "Quarter" value
 * @method Deal                setPayment()          Sets the current record's "Payment" collection
 * 
 * @package    mendozaoferta
 * @subpackage model
 * @author     diego@cooperativahormigon.com.ar
 * @version    SVN: $Id: Builder.php 7200 2010-02-21 09:37:37Z beberlei $
 */
abstract class BaseDeal extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('deal');
        $this->hasColumn('is_oferton', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('has_yapa', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('category_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('seller_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('store_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('quarter_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('starts_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('ends_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('bought_count', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('visited_count', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('printed_count', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('offer', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('real_value', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('newsletter_title', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('featured', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '4000',
             ));
        $this->hasColumn('conditions', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '4000',
             ));
        $this->hasColumn('description', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '4000',
             ));
        $this->hasColumn('max_per_buy', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('max_deals', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id'));

        $this->hasOne('Seller', array(
             'local' => 'seller_id',
             'foreign' => 'id'));

        $this->hasOne('Store', array(
             'local' => 'store_id',
             'foreign' => 'id'));

        $this->hasOne('Quarter', array(
             'local' => 'quarter_id',
             'foreign' => 'id'));

        $this->hasMany('Payment', array(
             'local' => 'id',
             'foreign' => 'deal_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}